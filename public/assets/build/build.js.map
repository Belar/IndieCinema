{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 24716b8449f689e9f5a6","webpack:///./client/store.js","webpack:///./client/components/ChannelGroups.vue","webpack:///./client/components/Loading.vue","webpack:///./client/components/OnScreenMessage.vue","webpack:///./client/components/ScrollToTop.vue","webpack:///./client/components/Sorting.vue","webpack:///./client/components/VideoGrid.vue","webpack:///./~/vue/dist/vue.common.js","webpack:///./client/main.js","webpack:///CustomGroupView.vue","webpack:///GroupView.vue","webpack:///NotFoundView.vue","webpack:///ChannelGroups.vue","webpack:///ContentManagement.vue","webpack:///Loading.vue","webpack:///Modal.vue","webpack:///OnScreenMessage.vue","webpack:///ScrollToTop.vue","webpack:///Sorting.vue","webpack:///VideoGrid.vue","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/lazysizes/lazysizes.js","webpack:///./client/CustomGroupView.vue?b49f","webpack:///./client/GroupView.vue?b020","webpack:///./client/NotFoundView.vue?0e6b","webpack:///./client/components/ChannelGroups.vue?db46","webpack:///./client/components/ContentManagement.vue?4611","webpack:///./client/components/Loading.vue?755f","webpack:///./client/components/Modal.vue?961c","webpack:///./client/components/OnScreenMessage.vue?36d0","webpack:///./client/components/ScrollToTop.vue?18da","webpack:///./client/components/Sorting.vue?9ac1","webpack:///./client/components/VideoGrid.vue?44b7","webpack:///./client/CustomGroupView.vue","webpack:///./client/GroupView.vue","webpack:///./client/NotFoundView.vue","webpack:///./client/components/ContentManagement.vue","webpack:///./client/components/Modal.vue","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","removeDuplicates","array","prop","uniqueArray","uniqueObject","arrayLength","length","i","_ref","_ref2","undefined","push","Object","defineProperty","value","_vue","_vue2","store","state","channelGroups","name","channels","loadingIndicator","screenMessage","movieList","queryChannels","hiddenChannels","sortCondition","sortOrder","currentPage","setLoading","this","setMessage","message","setMovies","movies","getMovies","fetchPage","http","url","method","then","response","concat","data","uniqueMovies","error","setHiddenChannels","toggleHideChannel","channel","channelPosition","indexOf","splice","setQueryChannels","addQueryChannel","removeQueryChannel","setSortCondition","condition","setSortOrder","order","setCurrentPage","pageNo","__vue_script__","__vue_template__","options","template","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","prototype","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","shift","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","_vueResource","_vueResource2","_vueRouter","_vueRouter2","_CustomGroupView","_CustomGroupView2","_GroupView","_GroupView2","_NotFoundView","_NotFoundView2","_store","_store2","App","router","history","beforeEach","/","/group/:groupName","*","_VideoGrid","_VideoGrid2","_OnScreenMessage","_OnScreenMessage2","_ContentManagement","_ContentManagement2","_Sorting","_Sorting2","_Loading","_Loading2","_ScrollToTop","_ScrollToTop2","_ChannelGroups","_ChannelGroups2","VideoGrid","OnScreenMessage","Sorting","ContentManagement","Loading","ScrollToTop","ChannelGroups","sharedState","route","findChannelGroup","group","currentGroup","$route","groupName","find","_stringify","_stringify2","localStorage","newChannel","deleteChannels","addChannel","$http","setItem","allowRemoval","removeChannel","filterByExistingChannel","movie","indieCinema","cleanMovies","hideChannel","customChannels","getItem","exampleChannels","video","closeMovie","appWrapper","sharedState.screenMessage","scrollAvailable","toTheTop","scrollTop","duration","step","scrollHeight","scrolling","setInterval","scrollY","scrollBy","clearInterval","changeOrder","_Modal","_Modal2","Modal","showModal","videoModal","movieListEdited","sortBy","filterOutHidden","showMovie","windowHeight","innerHeight","nextPage","core","$JSON","it","__e","lazySizes","getElementsByClassName","lazySizesConfig","docElem","supportPicture","HTMLPictureElement","_addEventListener","_getAttribute","requestIdleCallback","regPicture","loadEvents","regClassCache","hasClass","ele","reg","addRemoveLoadEvents","dom","evt","triggerEvent","elem","detail","noBubbles","noCancelable","createEvent","initCustomEvent","dispatchEvent","updatePolyfill","full","polyfill","picturefill","pf","reevaluate","elements","getCSS","getWidth","minSize","_lazysizesWidth","rAF","running","fns","rAFIt","simple","that","throttle","lastTime","gDelay","RIC_DEFAULT_TIMEOUT","rICTimeout","idleCallback","isPriority","loader","lazyloadElems","preloadElems","isCompleted","resetPreloadingTimer","loadMode","started","eLvW","elvH","eLtop","eLleft","eLright","eLbottom","defaultExpand","preloadExpand","hFac","regImg","regIframe","supportScroll","shrinkExpand","currentExpand","isLoading","lowRuns","resetPreloading","isNestedVisible","elemExpand","outerRect","visible","offsetParent","top","bottom","checkElements","eLlen","autoLoadElem","loadedSomething","elemNegativeExpand","elemExpandVal","beforeExpandVal","expand","clientHeight","expFactor","_lazyRace","innerWidth","unveilElement","preloadAfterLoad","sizesAttr","throttledCheckElements","switchLoadingClass","loadedClass","loadingClass","rafSwitchLoadingClass","rafedSwitchLoadingClass","changeIframeSrc","location","handleSources","customMedia","sourceSrcset","srcsetAttr","lazyUnveil","isAuto","sizes","isImg","srcset","isPicture","firesLoad","defaultPrevented","autosizesClass","srcAttr","nodeName","clearTimeout","getElementsByTagName","lazyClass","complete","errorClass","autoSizer","updateElem","onload","afterScroll","preloadClass","childList","subtree","readyState","checkElems","unveil","autosizesElems","sizeElement","sources","len","dataAttr","getSizeElement","updateElementsSizes","debouncedUpdateElementsSizes","lazySizesDefaults","lazysizesConfig","cfg","uP","aC","rC","hC","fire","gW","Promise$2","executor","PENDING","deferred","promise","x","resolve","r","reject","Promise$1","PromiseObj","Util","msg","toLower","isFunction","_typeof","getPrototypeOf","when","fulfilled","rejected","opts","merge","$vm","each","_merge","root","urlParams","Url","legacy","variables","slash","encodeUriSegment","encodeUriQuery","spaces","encodeURIComponent","tmpl","expanded","vars","operators","operator","values","substr","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","part","encodeURI","transform","transforms","serialize","plain","xdrClient","request","xdr","XDomainRequest","abort","responseText","status","statusText","onabort","onerror","ontimeout","onprogress","send","cors","crossOrigin","supportCors","client","emulateHTTP","requestUrl","protocol","originUrl","mime","emulateJSON","headers","jsonpClient","script","callback","random","jsonp","beforeSend","header","Http","common","custom","xhrClient","xhr","XMLHttpRequest","allHeaders","getAllResponseHeaders","upload","setRequestHeader","Client","reqHandlers","pop","resHandlers","processResponse","sendRequest","parseHeaders","ok","row","interceptors","Error","success","Resource","resource","Promise","$url","$resource","$promise","Symbol","RESOLVED","REJECTED","all","iterable","resolver","race","TypeError","onResolved","onRejected","always","ie","documentMode","escape","href","port","hostname","pathname","jsonType","Content-Type","post","patch","Accept","X-Requested-With","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","stack","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","button","go","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","afterEach","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(9);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(8);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction removeDuplicates(array, prop) {\n\t  var uniqueArray = [];\n\t  var uniqueObject = {};\n\t  var arrayLength = array.length;\n\t\n\t  for (var i = 0; i < arrayLength; i++) {\n\t    uniqueObject[array[i][prop]] = array[i];\n\t  }\n\t\n\t  for (var _ref in uniqueObject) {\n\t    var _ref2 = _ref;\n\t    var i = _ref2 === undefined ? 0 : _ref2;\n\t\n\t    uniqueArray.push(uniqueObject[i]);\n\t  }\n\t  return uniqueArray;\n\t}\n\t\n\tvar store = {\n\t  state: {\n\t    channelGroups: [{\n\t      'name': 'mix',\n\t      'channels': ['staffpicks', 'shortoftheweek', '31259', 'everythinganimated', 'documentaryfilm', '8048']\n\t    }, {\n\t      'name': 'film',\n\t      'channels': ['shortoftheweek', '31259', 'filmmakers', 'thefilmmakers', 'bfc']\n\t    }, {\n\t      'name': 'music',\n\t      'channels': ['8048', 'musicall', 'hdmusicvideos', 'musicvideos', 'musicvideoland']\n\t    }, {\n\t      'name': 'creative',\n\t      'channels': ['designcollector', '1nspirational', 'thegoodstuff', '5vimeobest', 'nothingshortof']\n\t    }],\n\t    loadingIndicator: false,\n\t    screenMessage: '',\n\t    movieList: [],\n\t    queryChannels: [],\n\t    hiddenChannels: [],\n\t    sortCondition: 'indieCinema.order',\n\t    sortOrder: 1,\n\t    currentPage: 1 },\n\t  setLoading: function setLoading(state) {\n\t    this.state.loadingIndicator = state;\n\t  },\n\t  setMessage: function setMessage(message) {\n\t    this.state.screenMessage = message;\n\t  },\n\t  setMovies: function setMovies(movies) {\n\t    this.state.movieList = movies;\n\t  },\n\t  getMovies: function getMovies() {\n\t    if (!this.state.queryChannels.length > 0) {\n\t      return store.setMessage('There are no channels to show videos from');\n\t    }\n\t\n\t    store.setLoading(true);\n\t    var movies = this.state.movieList;\n\t    var fetchPage = this.state.currentPage;\n\t    _vue2.default.http({\n\t      url: '/api/get-videos?channels=' + this.state.queryChannels + '&page=' + fetchPage,\n\t      method: 'GET'\n\t    }).then(function (response) {\n\t      movies = movies.concat(response.data);\n\t\n\t      var uniqueMovies = removeDuplicates(movies, 'uri');\n\t\n\t      store.setLoading(false);\n\t\n\t      store.setMovies(uniqueMovies);\n\t    }, function (error) {\n\t      store.setLoading(false);\n\t      return store.setMessage(error.data.message);\n\t    });\n\t  },\n\t  setHiddenChannels: function setHiddenChannels(channels) {\n\t    this.state.hiddenChannels = channels;\n\t  },\n\t  toggleHideChannel: function toggleHideChannel(channel) {\n\t    var channelPosition = this.state.hiddenChannels.indexOf(channel);\n\t    if (channelPosition !== -1) {\n\t      return this.state.hiddenChannels.splice(channelPosition, 1);\n\t    }\n\t    return this.state.hiddenChannels.push(channel);\n\t  },\n\t  setQueryChannels: function setQueryChannels(channels) {\n\t    this.state.queryChannels = channels;\n\t  },\n\t  addQueryChannel: function addQueryChannel(channel) {\n\t    this.state.queryChannels.push(channel);\n\t  },\n\t  removeQueryChannel: function removeQueryChannel(channel) {\n\t    var channelPosition = this.state.queryChannels.indexOf(channel);\n\t    if (channelPosition !== -1) {\n\t      return this.state.queryChannels.splice(channelPosition, 1);\n\t    }\n\t  },\n\t  setSortCondition: function setSortCondition(condition) {\n\t    this.state.sortCondition = condition;\n\t  },\n\t  setSortOrder: function setSortOrder(order) {\n\t    if (order === 'asc') {\n\t      this.state.sortOrder = 1;\n\t    } else {\n\t      this.state.sortOrder = -1;\n\t    }\n\t  },\n\t  setCurrentPage: function setCurrentPage(pageNo) {\n\t    this.state.currentPage = pageNo;\n\t  }\n\t};\n\t\n\texports.default = store;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(27)\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(39)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(29)\n\t__vue_script__ = __webpack_require__(15)\n\t__vue_template__ = __webpack_require__(41)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(31)\n\t__vue_script__ = __webpack_require__(17)\n\t__vue_template__ = __webpack_require__(43)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(32)\n\t__vue_script__ = __webpack_require__(18)\n\t__vue_template__ = __webpack_require__(44)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(33)\n\t__vue_script__ = __webpack_require__(19)\n\t__vue_template__ = __webpack_require__(45)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(34)\n\t__vue_script__ = __webpack_require__(20)\n\t__vue_template__ = __webpack_require__(46)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(8);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueResource = __webpack_require__(52);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _vueRouter = __webpack_require__(53);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _CustomGroupView = __webpack_require__(47);\n\t\n\tvar _CustomGroupView2 = _interopRequireDefault(_CustomGroupView);\n\t\n\tvar _GroupView = __webpack_require__(48);\n\t\n\tvar _GroupView2 = _interopRequireDefault(_GroupView);\n\t\n\tvar _NotFoundView = __webpack_require__(49);\n\t\n\tvar _NotFoundView2 = _interopRequireDefault(_NotFoundView);\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default, 'localhost:3000');\n\t_vue2.default.use(_vueResource2.default);\n\t\n\tvar App = _vue2.default.extend();\n\t\n\tvar router = new _vueRouter2.default({\n\t  history: true\n\t});\n\t\n\trouter.beforeEach(function () {\n\t  _store2.default.setCurrentPage(1);\n\t  _store2.default.setMovies([]);\n\t  _store2.default.setHiddenChannels([]);\n\t});\n\t\n\trouter.map({\n\t  '/': {\n\t    component: _CustomGroupView2.default\n\t  },\n\t  '/group/:groupName': {\n\t    component: _GroupView2.default\n\t  },\n\t  '*': {\n\t    component: _NotFoundView2.default\n\t  }\n\t});\n\t\n\trouter.start(App, '#app');\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _VideoGrid = __webpack_require__(7);\n\t\n\tvar _VideoGrid2 = _interopRequireDefault(_VideoGrid);\n\t\n\tvar _OnScreenMessage = __webpack_require__(4);\n\t\n\tvar _OnScreenMessage2 = _interopRequireDefault(_OnScreenMessage);\n\t\n\tvar _ContentManagement = __webpack_require__(50);\n\t\n\tvar _ContentManagement2 = _interopRequireDefault(_ContentManagement);\n\t\n\tvar _Sorting = __webpack_require__(6);\n\t\n\tvar _Sorting2 = _interopRequireDefault(_Sorting);\n\t\n\tvar _Loading = __webpack_require__(3);\n\t\n\tvar _Loading2 = _interopRequireDefault(_Loading);\n\t\n\tvar _ScrollToTop = __webpack_require__(5);\n\t\n\tvar _ScrollToTop2 = _interopRequireDefault(_ScrollToTop);\n\t\n\tvar _ChannelGroups = __webpack_require__(2);\n\t\n\tvar _ChannelGroups2 = _interopRequireDefault(_ChannelGroups);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    VideoGrid: _VideoGrid2.default,\n\t    OnScreenMessage: _OnScreenMessage2.default,\n\t    Sorting: _Sorting2.default,\n\t    ContentManagement: _ContentManagement2.default,\n\t    Loading: _Loading2.default,\n\t    ScrollToTop: _ScrollToTop2.default,\n\t    ChannelGroups: _ChannelGroups2.default\n\t  }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _VideoGrid = __webpack_require__(7);\n\t\n\tvar _VideoGrid2 = _interopRequireDefault(_VideoGrid);\n\t\n\tvar _OnScreenMessage = __webpack_require__(4);\n\t\n\tvar _OnScreenMessage2 = _interopRequireDefault(_OnScreenMessage);\n\t\n\tvar _Sorting = __webpack_require__(6);\n\t\n\tvar _Sorting2 = _interopRequireDefault(_Sorting);\n\t\n\tvar _Loading = __webpack_require__(3);\n\t\n\tvar _Loading2 = _interopRequireDefault(_Loading);\n\t\n\tvar _ScrollToTop = __webpack_require__(5);\n\t\n\tvar _ScrollToTop2 = _interopRequireDefault(_ScrollToTop);\n\t\n\tvar _ChannelGroups = __webpack_require__(2);\n\t\n\tvar _ChannelGroups2 = _interopRequireDefault(_ChannelGroups);\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    VideoGrid: _VideoGrid2.default,\n\t    OnScreenMessage: _OnScreenMessage2.default,\n\t    Sorting: _Sorting2.default,\n\t    Loading: _Loading2.default,\n\t    ScrollToTop: _ScrollToTop2.default,\n\t    ChannelGroups: _ChannelGroups2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      sharedState: _store2.default.state };\n\t  },\n\t  route: {\n\t    data: function data() {\n\t      function findChannelGroup(group) {\n\t        return group.name === currentGroup;\n\t      }\n\t\n\t      var currentGroup = this.$route.params.groupName;\n\t      var queryChannels = this.sharedState.channelGroups.find(findChannelGroup).channels;\n\t\n\t      _store2.default.setQueryChannels(queryChannels);\n\t      _store2.default.getMovies();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ChannelGroups = __webpack_require__(2);\n\t\n\tvar _ChannelGroups2 = _interopRequireDefault(_ChannelGroups);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    ChannelGroups: _ChannelGroups2.default\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      sharedState: _store2.default.state\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(21);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar localStorage = window.localStorage;\n\t\n\tfunction removeDuplicates(array, prop) {\n\t  var uniqueArray = [];\n\t  var uniqueObject = {};\n\t  var arrayLength = array.length;\n\t\n\t  for (var i = 0; i < arrayLength; i++) {\n\t    uniqueObject[array[i][prop]] = array[i];\n\t  }\n\t\n\t  for (var _ref in uniqueObject) {\n\t    var _ref2 = _ref;\n\t    var i = _ref2 === undefined ? 0 : _ref2;\n\t\n\t    uniqueArray.push(uniqueObject[i]);\n\t  }\n\t  return uniqueArray;\n\t}\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      newChannel: '',\n\t      deleteChannels: false,\n\t      sharedState: _store2.default.state };\n\t  },\n\t  methods: {\n\t    addChannel: function addChannel() {\n\t      var addChannel = this.newChannel.trim();\n\t\n\t      if (!addChannel) {\n\t        return _store2.default.setMessage('Channel name can not be empty');\n\t      }\n\t\n\t      if (/^[a-zA-Z\\u00C0-\\u017F]+,\\s[a-zA-Z\\u00C0-\\u017F]+$/.test(addChannel)) {\n\t        return _store2.default.setMessage('Channel name can not contain accented characters');\n\t      }\n\t\n\t      if (this.sharedState.queryChannels.indexOf(addChannel) !== -1) {\n\t        return _store2.default.setMessage('This channel is already present');\n\t      }\n\t\n\t      var movies = this.sharedState.movieList;\n\t      _store2.default.setLoading(true);\n\t\n\t      this.$http({\n\t        url: '/api/get-videos-single?channel=' + addChannel,\n\t        method: 'GET'\n\t      }).then(function (response) {\n\t        movies = movies.concat(response.data);\n\t\n\t        var uniqueMovies = removeDuplicates(movies, 'uri');\n\t\n\t        _store2.default.setMovies(uniqueMovies);\n\t\n\t        _store2.default.setLoading(false);\n\t\n\t        _store2.default.addQueryChannel(addChannel);\n\t        localStorage.setItem('myChannels', (0, _stringify2.default)(this.sharedState.queryChannels));\n\t      }, function (error) {\n\t        _store2.default.setLoading(false);\n\t        return _store2.default.setMessage(error.data.message);\n\t      });\n\t\n\t      this.newChannel = '';\n\t    },\n\t    allowRemoval: function allowRemoval() {\n\t      if (this.deleteChannels === false) {\n\t        return this.$set('deleteChannels', true);\n\t      }\n\t      this.$set('deleteChannels', false);\n\t    },\n\t    removeChannel: function removeChannel(channel) {\n\t      _store2.default.removeQueryChannel(channel);\n\t\n\t      if (!this.sharedState.queryChannels.length > 0) {\n\t        _store2.default.setMovies([]);\n\t      }\n\t      localStorage.setItem('myChannels', (0, _stringify2.default)(this.sharedState.queryChannels));\n\t\n\t      var movies = this.sharedState.movieList;\n\t      var queryChannels = this.sharedState.queryChannels;\n\t\n\t      function filterByExistingChannel(movie) {\n\t        if (queryChannels.indexOf(movie.indieCinema.channel) !== -1) {\n\t          return true;\n\t        }\n\t      }\n\t      var cleanMovies = movies.filter(filterByExistingChannel);\n\t      _store2.default.setMovies(cleanMovies);\n\t    },\n\t    hideChannel: function hideChannel(channel) {\n\t      _store2.default.toggleHideChannel(channel);\n\t      localStorage.setItem('hiddenChannels', (0, _stringify2.default)(this.sharedState.hiddenChannels));\n\t    }\n\t  },\n\t  created: function created() {\n\t    var customChannels = localStorage.getItem('myChannels');\n\t    if (customChannels) {\n\t      customChannels = JSON.parse(customChannels);\n\t      _store2.default.setQueryChannels(customChannels);\n\t    } else {\n\t      var exampleChannels = ['staffpicks', 'everythinganimated', '5vimeobest'];\n\t      _store2.default.setQueryChannels(exampleChannels);\n\t    }\n\t\n\t    var hiddenChannels = JSON.parse(localStorage.getItem('hiddenChannels'));\n\t    if (hiddenChannels) {\n\t      _store2.default.setHiddenChannels(hiddenChannels);\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    _store2.default.getMovies();\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      sharedState: _store2.default.state\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {\n\t    show: {\n\t      type: Boolean,\n\t      required: true,\n\t      twoWay: true\n\t    },\n\t    video: {\n\t      type: Object,\n\t      required: true\n\t    }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      movie: {}\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    closeMovie: function closeMovie() {\n\t      this.movie = {};\n\t\n\t      this.show = false;\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'show': function show() {\n\t      var appWrapper = document.getElementById('body-content-wrapper');\n\t      if (this.show === true) {\n\t        this.$set('movie', this.video);\n\t\n\t        appWrapper.classList.add('modal-open');\n\t      } else {\n\t        appWrapper.classList.remove('modal-open');\n\t      }\n\t    }\n\t  },\n\t\n\t  ready: function ready() {\n\t    var _this = this;\n\t\n\t    document.addEventListener('keydown', function (event) {\n\t      if (_this.show && event.keyCode === 27) {\n\t        _this.closeMovie();\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      sharedState: _store2.default.state\n\t    };\n\t  },\n\t  watch: {\n\t    'sharedState.screenMessage': function sharedStateScreenMessage() {\n\t      if (this.sharedState.screenMessage) {\n\t        setTimeout(function () {\n\t          _store2.default.setMessage('');\n\t        }, 3000);\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      scrollAvailable: false\n\t    };\n\t  },\n\t  methods: {\n\t    toTheTop: function toTheTop() {\n\t      function scrollTop(duration) {\n\t        var step = -document.body.scrollHeight / duration;\n\t        var scrolling = setInterval(function () {\n\t          if (window.scrollY !== 0) {\n\t            return window.scrollBy(0, step);\n\t          }\n\t          return clearInterval(scrolling);\n\t        }, duration / 24);\n\t      }\n\t      scrollTop(125);\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var _this = this;\n\t\n\t    window.addEventListener('scroll', function () {\n\t      if (window.scrollY > 0) {\n\t        return _this.$set('scrollAvailable', true);\n\t      }\n\t      return _this.$set('scrollAvailable', false);\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      sharedState: _store2.default.state };\n\t  },\n\t  methods: {\n\t    changeOrder: function changeOrder(condition) {\n\t      _store2.default.setSortCondition(condition);\n\t      if (condition === 'indieCinema.order') {\n\t        return _store2.default.setSortOrder('asc');\n\t      }\n\t      return _store2.default.setSortOrder('desc');\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(51);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _store = __webpack_require__(1);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\t__webpack_require__(35);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Modal: _Modal2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      showModal: false,\n\t      videoModal: {},\n\t      sharedState: _store2.default.state };\n\t  },\n\t  computed: {\n\t    movieListEdited: function movieListEdited() {\n\t      var movies = this.sharedState.movieList;\n\t      var hiddenChannels = this.sharedState.hiddenChannels;\n\t      var sortCondition = this.sharedState.sortCondition;\n\t      var sortOrder = this.sharedState.sortOrder;\n\t\n\t      function sortBy(condition, order) {\n\t        var props = condition.split('.');\n\t\n\t        return function (a, b) {\n\t          props.forEach(function (prop) {\n\t            a = a[prop];\n\t            b = b[prop];\n\t          });\n\t          if (a < b) {\n\t            return -1 * order;\n\t          } else if (a > b) {\n\t            return 1 * order;\n\t          } else {\n\t            return 0;\n\t          }\n\t        };\n\t      };\n\t\n\t      function filterOutHidden(movie) {\n\t        if (hiddenChannels.indexOf(movie.indieCinema.channel) === -1) {\n\t          return true;\n\t        }\n\t      };\n\t\n\t      return movies.filter(filterOutHidden).sort(sortBy(sortCondition, sortOrder));\n\t    }\n\t  },\n\t  methods: {\n\t    showMovie: function showMovie(video) {\n\t      this.videoModal = video;\n\t      this.showModal = true;\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var _this = this;\n\t\n\t    window.addEventListener('scroll', function () {\n\t      var scrollHeight = document.body.scrollHeight;\n\t      var scrollTop = document.body.scrollTop;\n\t      var windowHeight = window.innerHeight;\n\t      var offset = 250;\n\t      if (scrollTop >= scrollHeight - windowHeight - offset && _this.sharedState.loadingIndicator === false) {\n\t        var nextPage = _this.sharedState.currentPage + 1;\n\t        _store2.default.setCurrentPage(nextPage);\n\t        return _store2.default.getMovies();\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(22), __esModule: true };\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(23)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t(function(window, factory) {\n\t\tvar lazySizes = factory(window, window.document);\n\t\twindow.lazySizes = lazySizes;\n\t\tif(typeof module == 'object' && module.exports){\n\t\t\tmodule.exports = lazySizes;\n\t\t}\n\t}(window, function l(window, document) {\n\t\t'use strict';\n\t\t/*jshint eqnull:true */\n\t\tif(!document.getElementsByClassName){return;}\n\t\n\t\tvar lazySizesConfig;\n\t\n\t\tvar docElem = document.documentElement;\n\t\n\t\tvar Date = window.Date;\n\t\n\t\tvar supportPicture = window.HTMLPictureElement;\n\t\n\t\tvar _addEventListener = 'addEventListener';\n\t\n\t\tvar _getAttribute = 'getAttribute';\n\t\n\t\tvar addEventListener = window[_addEventListener];\n\t\n\t\tvar setTimeout = window.setTimeout;\n\t\n\t\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\t\n\t\tvar requestIdleCallback = window.requestIdleCallback;\n\t\n\t\tvar regPicture = /^picture$/i;\n\t\n\t\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\t\n\t\tvar regClassCache = {};\n\t\n\t\tvar forEach = Array.prototype.forEach;\n\t\n\t\tvar hasClass = function(ele, cls) {\n\t\t\tif(!regClassCache[cls]){\n\t\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t\t}\n\t\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t\t};\n\t\n\t\tvar addClass = function(ele, cls) {\n\t\t\tif (!hasClass(ele, cls)){\n\t\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t\t}\n\t\t};\n\t\n\t\tvar removeClass = function(ele, cls) {\n\t\t\tvar reg;\n\t\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t\t}\n\t\t};\n\t\n\t\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\t\tif(add){\n\t\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t\t}\n\t\t\tloadEvents.forEach(function(evt){\n\t\t\t\tdom[action](evt, fn);\n\t\t\t});\n\t\t};\n\t\n\t\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\t\tvar event = document.createEvent('CustomEvent');\n\t\n\t\t\tevent.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});\n\t\n\t\t\telem.dispatchEvent(event);\n\t\t\treturn event;\n\t\t};\n\t\n\t\tvar updatePolyfill = function (el, full){\n\t\t\tvar polyfill;\n\t\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){\n\t\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t\t} else if(full && full.src){\n\t\t\t\tel.src = full.src;\n\t\t\t}\n\t\t};\n\t\n\t\tvar getCSS = function (elem, style){\n\t\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t\t};\n\t\n\t\tvar getWidth = function(elem, parent, width){\n\t\t\twidth = width || elem.offsetWidth;\n\t\n\t\t\twhile(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){\n\t\t\t\twidth =  parent.offsetWidth;\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar rAF = (function(){\n\t\t\tvar running, waiting;\n\t\t\tvar fns = [];\n\t\n\t\t\tvar run = function(){\n\t\t\t\tvar fn;\n\t\t\t\trunning = true;\n\t\t\t\twaiting = false;\n\t\t\t\twhile(fns.length){\n\t\t\t\t\tfn = fns.shift();\n\t\t\t\t\tfn[0].apply(fn[1], fn[2]);\n\t\t\t\t}\n\t\t\t\trunning = false;\n\t\t\t};\n\t\n\t\t\treturn function(fn){\n\t\t\t\tif(running){\n\t\t\t\t\tfn.apply(this, arguments);\n\t\t\t\t} else {\n\t\t\t\t\tfns.push([fn, this, arguments]);\n\t\n\t\t\t\t\tif(!waiting){\n\t\t\t\t\t\twaiting = true;\n\t\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t})();\n\t\n\t\tvar rAFIt = function(fn, simple){\n\t\t\treturn simple ?\n\t\t\t\tfunction() {\n\t\t\t\t\trAF(fn);\n\t\t\t\t} :\n\t\t\t\tfunction(){\n\t\t\t\t\tvar that = this;\n\t\t\t\t\tvar args = arguments;\n\t\t\t\t\trAF(function(){\n\t\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t;\n\t\t};\n\t\n\t\tvar throttle = function(fn){\n\t\t\tvar running;\n\t\t\tvar lastTime = 0;\n\t\t\tvar gDelay = 125;\n\t\t\tvar RIC_DEFAULT_TIMEOUT = 999;\n\t\t\tvar rICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\t\tvar run = function(){\n\t\t\t\trunning = false;\n\t\t\t\tlastTime = Date.now();\n\t\t\t\tfn();\n\t\t\t};\n\t\t\tvar idleCallback = requestIdleCallback ?\n\t\t\t\tfunction(){\n\t\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\t\t\t\t\tif(rICTimeout !== RIC_DEFAULT_TIMEOUT){\n\t\t\t\t\t\trICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\t\t\t\t}\n\t\t\t\t}:\n\t\t\t\trAFIt(function(){\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}, true)\n\t\t\t;\n\t\n\t\t\treturn function(isPriority){\n\t\t\t\tvar delay;\n\t\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\t\trICTimeout = 66;\n\t\t\t\t}\n\t\n\t\t\t\tif(running){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\trunning =  true;\n\t\n\t\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\t\n\t\t\t\tif(delay < 0){\n\t\t\t\t\tdelay = 0;\n\t\t\t\t}\n\t\n\t\t\t\tif(isPriority || (delay < 9 && requestIdleCallback)){\n\t\t\t\t\tidleCallback();\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\n\t\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\t\tvar debounce = function(func) {\n\t\t\tvar timeout, timestamp;\n\t\t\tvar wait = 99;\n\t\t\tvar run = function(){\n\t\t\t\ttimeout = null;\n\t\t\t\tfunc();\n\t\t\t};\n\t\t\tvar later = function() {\n\t\t\t\tvar last = Date.now() - timestamp;\n\t\n\t\t\t\tif (last < wait) {\n\t\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t\t} else {\n\t\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function() {\n\t\t\t\ttimestamp = Date.now();\n\t\n\t\t\t\tif (!timeout) {\n\t\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\n\t\n\t\tvar loader = (function(){\n\t\t\tvar lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\t\n\t\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom;\n\t\n\t\t\tvar defaultExpand, preloadExpand, hFac;\n\t\n\t\t\tvar regImg = /^img$/i;\n\t\t\tvar regIframe = /^iframe$/i;\n\t\n\t\t\tvar supportScroll = ('onscroll' in window) && !(/glebot/.test(navigator.userAgent));\n\t\n\t\t\tvar shrinkExpand = 0;\n\t\t\tvar currentExpand = 0;\n\t\n\t\t\tvar isLoading = 0;\n\t\t\tvar lowRuns = 0;\n\t\n\t\t\tvar resetPreloading = function(e){\n\t\t\t\tisLoading--;\n\t\t\t\tif(e && e.target){\n\t\t\t\t\taddRemoveLoadEvents(e.target, resetPreloading);\n\t\t\t\t}\n\t\n\t\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\t\tisLoading = 0;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\t\tvar outerRect;\n\t\t\t\tvar parent = elem;\n\t\t\t\tvar visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';\n\t\n\t\t\t\teLtop -= elemExpand;\n\t\t\t\teLbottom += elemExpand;\n\t\t\t\teLleft -= elemExpand;\n\t\t\t\teLright += elemExpand;\n\t\n\t\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\t\n\t\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t\t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn visible;\n\t\t\t};\n\t\n\t\t\tvar checkElements = function() {\n\t\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;\n\t\n\t\t\t\tif((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\t\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\t\tlowRuns++;\n\t\n\t\t\t\t\tif(preloadExpand == null){\n\t\t\t\t\t\tif(!('expand' in lazySizesConfig)){\n\t\t\t\t\t\t\tlazySizesConfig.expand = docElem.clientHeight > 500 ? 500 : 400;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdefaultExpand = lazySizesConfig.expand;\n\t\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesConfig.expFactor;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 3 && loadMode > 2){\n\t\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\t\tlowRuns = 0;\n\t\t\t\t\t} else if(loadMode > 1 && lowRuns > 2 && isLoading < 6){\n\t\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor(; i < eLlen; i++){\n\t\n\t\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\t\n\t\t\t\t\t\tif(!supportScroll){unveilElement(lazyloadElems[i]);continue;}\n\t\n\t\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\t\n\t\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t\t(preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&\n\t\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto')))){\n\t\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar throttledCheckElements = throttle(checkElements);\n\t\n\t\t\tvar switchLoadingClass = function(e){\n\t\t\t\taddClass(e.target, lazySizesConfig.loadedClass);\n\t\t\t\tremoveClass(e.target, lazySizesConfig.loadingClass);\n\t\t\t\taddRemoveLoadEvents(e.target, rafSwitchLoadingClass);\n\t\t\t};\n\t\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t\t};\n\t\n\t\t\tvar changeIframeSrc = function(elem, src){\n\t\t\t\ttry {\n\t\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t\t} catch(e){\n\t\t\t\t\telem.src = src;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar handleSources = function(source){\n\t\t\t\tvar customMedia, parent;\n\t\n\t\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);\n\t\n\t\t\t\tif( (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t\t}\n\t\n\t\t\t\tif(sourceSrcset){\n\t\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t\t}\n\t\n\t\t\t\t//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572\n\t\t\t\tif(customMedia){\n\t\t\t\t\tparent = source.parentNode;\n\t\t\t\t\tparent.insertBefore(source.cloneNode(), source);\n\t\t\t\t\tparent.removeChild(source);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\t\n\t\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\t\n\t\t\t\t\tif(sizes){\n\t\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\t\taddClass(elem, lazySizesConfig.autosizesClass);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tsrcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);\n\t\t\t\t\tsrc = elem[_getAttribute](lazySizesConfig.srcAttr);\n\t\n\t\t\t\t\tif(isImg) {\n\t\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\t\n\t\t\t\t\tevent = {target: elem};\n\t\n\t\t\t\t\tif(firesLoad){\n\t\t\t\t\t\taddRemoveLoadEvents(elem, resetPreloading, true);\n\t\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\t\n\t\t\t\t\t\taddClass(elem, lazySizesConfig.loadingClass);\n\t\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(isPicture){\n\t\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(srcset){\n\t\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(srcset || isPicture){\n\t\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\trAF(function(){\n\t\t\t\t\tif(elem._lazyRace){\n\t\t\t\t\t\tdelete elem._lazyRace;\n\t\t\t\t\t}\n\t\t\t\t\tremoveClass(elem, lazySizesConfig.lazyClass);\n\t\n\t\t\t\t\tif( !firesLoad || elem.complete ){\n\t\t\t\t\t\tif(firesLoad){\n\t\t\t\t\t\t\tresetPreloading(event);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tisLoading--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\tvar unveilElement = function (elem){\n\t\t\t\tvar detail;\n\t\n\t\t\t\tvar isImg = regImg.test(elem.nodeName);\n\t\n\t\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\t\tvar isAuto = sizes == 'auto';\n\t\n\t\t\t\tif( (isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)){return;}\n\t\n\t\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\t\n\t\t\t\tif(isAuto){\n\t\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t\t}\n\t\n\t\t\t\telem._lazyRace = true;\n\t\t\t\tisLoading++;\n\t\n\t\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t\t};\n\t\n\t\t\tvar onload = function(){\n\t\t\t\tif(isCompleted){return;}\n\t\t\t\tif(Date.now() - started < 999){\n\t\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar afterScroll = debounce(function(){\n\t\t\t\t\tlazySizesConfig.loadMode = 3;\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t});\n\t\n\t\t\t\tisCompleted = true;\n\t\n\t\t\t\tlazySizesConfig.loadMode = 3;\n\t\n\t\t\t\tthrottledCheckElements();\n\t\n\t\t\t\taddEventListener('scroll', function(){\n\t\t\t\t\tif(lazySizesConfig.loadMode == 3){\n\t\t\t\t\t\tlazySizesConfig.loadMode = 2;\n\t\t\t\t\t}\n\t\t\t\t\tafterScroll();\n\t\t\t\t}, true);\n\t\t\t};\n\t\n\t\t\treturn {\n\t\t\t\t_: function(){\n\t\t\t\t\tstarted = Date.now();\n\t\n\t\t\t\t\tlazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);\n\t\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);\n\t\t\t\t\thFac = lazySizesConfig.hFac;\n\t\n\t\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\t\n\t\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\t\n\t\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t\t}\n\t\n\t\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\t\n\t\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function(name){\n\t\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t\t});\n\t\n\t\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\t\tonload();\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthrottledCheckElements(lazyloadElems.length > 0);\n\t\t\t\t},\n\t\t\t\tcheckElems: throttledCheckElements,\n\t\t\t\tunveil: unveilElement\n\t\t\t};\n\t\t})();\n\t\n\t\n\t\tvar autoSizer = (function(){\n\t\t\tvar autosizesElems;\n\t\n\t\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\t\tvar sources, i, len;\n\t\t\t\telem._lazysizesWidth = width;\n\t\t\t\twidth += 'px';\n\t\n\t\t\t\telem.setAttribute('sizes', width);\n\t\n\t\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif(!event.detail.dataAttr){\n\t\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\t\tvar event;\n\t\t\t\tvar parent = elem.parentNode;\n\t\n\t\t\t\tif(parent){\n\t\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\t\n\t\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\t\twidth = event.detail.width;\n\t\n\t\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar updateElementsSizes = function(){\n\t\t\t\tvar i;\n\t\t\t\tvar len = autosizesElems.length;\n\t\t\t\tif(len){\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\t\n\t\t\treturn {\n\t\t\t\t_: function(){\n\t\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);\n\t\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t\t},\n\t\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\t\tupdateElem: getSizeElement\n\t\t\t};\n\t\t})();\n\t\n\t\tvar init = function(){\n\t\t\tif(!init.i){\n\t\t\t\tinit.i = true;\n\t\t\t\tautoSizer._();\n\t\t\t\tloader._();\n\t\t\t}\n\t\t};\n\t\n\t\t(function(){\n\t\t\tvar prop;\n\t\n\t\t\tvar lazySizesDefaults = {\n\t\t\t\tlazyClass: 'lazyload',\n\t\t\t\tloadedClass: 'lazyloaded',\n\t\t\t\tloadingClass: 'lazyloading',\n\t\t\t\tpreloadClass: 'lazypreload',\n\t\t\t\terrorClass: 'lazyerror',\n\t\t\t\t//strictClass: 'lazystrict',\n\t\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\t\tsrcAttr: 'data-src',\n\t\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\t\tsizesAttr: 'data-sizes',\n\t\t\t\t//preloadAfterLoad: false,\n\t\t\t\tminSize: 40,\n\t\t\t\tcustomMedia: {},\n\t\t\t\tinit: true,\n\t\t\t\texpFactor: 1.5,\n\t\t\t\thFac: 0.8,\n\t\t\t\tloadMode: 2\n\t\t\t};\n\t\n\t\t\tlazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};\n\t\n\t\t\tfor(prop in lazySizesDefaults){\n\t\t\t\tif(!(prop in lazySizesConfig)){\n\t\t\t\t\tlazySizesConfig[prop] = lazySizesDefaults[prop];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\twindow.lazySizesConfig = lazySizesConfig;\n\t\n\t\t\tsetTimeout(function(){\n\t\t\t\tif(lazySizesConfig.init){\n\t\t\t\t\tinit();\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t\n\t\treturn {\n\t\t\tcfg: lazySizesConfig,\n\t\t\tautoSizer: autoSizer,\n\t\t\tloader: loader,\n\t\t\tinit: init,\n\t\t\tuP: updatePolyfill,\n\t\t\taC: addClass,\n\t\t\trC: removeClass,\n\t\t\thC: hasClass,\n\t\t\tfire: triggerEvent,\n\t\t\tgW: getWidth,\n\t\t\trAF: rAF,\n\t\t};\n\t}\n\t));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=main-wrapper> <on-screen-message></on-screen-message> <channel-groups></channel-groups> <h1>IndieCinema</h1> <content-management></content-management> <sorting></sorting> <video-grid></video-grid> <loading></loading> <scroll-to-top></scroll-to-top> </div> \";\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=main-wrapper> <on-screen-message></on-screen-message> <channel-groups></channel-groups> <h1>IndieCinema</h1> <sorting></sorting> <video-grid></video-grid> <loading></loading> <scroll-to-top></scroll-to-top> </div> \";\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=main-wrapper> <channel-groups></channel-groups> <h1>IndieCinema</h1> <div class=not-found> <h2 class=info>Page you are looking for doesn't exist.</h2> Let's get you <a v-link=\\\"'/'\\\">home.</a> </div> </div> \";\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=channel-groups> <ul> <li class=group v-for=\\\"group in sharedState.channelGroups\\\"> <a class=group-name v-link=\\\"{ path: '/group/'+group.name, activeClass: 'active' }\\\">{{ group.name }}</a> </li> <li class=group> <a class=group-name v-link=\\\"{ path: '/', activeClass: 'active', exact: true }\\\">Your channels</a> </li> </ul> </div> \";\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=add-new-channel-wrapper> <div class=add-new-channel> <label>Add channel</label> <input autofocus autocomplete=off placeholder=\\\"e.g. eoadaily\\\" v-model=newChannel @keyup.enter=addChannel()> <svg class=\\\"icon icon-plus\\\" @click=addChannel()> <use xlink:href=/assets/images/symbols_defs.svg#icon-plus></use> </svg> </div> </div> <div class=\\\"action-bar clearfix\\\"> <div class=query-channels> <h5>Current channels:</h5> <ul> <li class=\\\"channel label\\\" v-for=\\\"channel in sharedState.queryChannels\\\"> <svg class=\\\"channel-visibility icon icon-eye\\\" :class=\\\"{'inactive' : this.sharedState.hiddenChannels.indexOf(channel) !== -1}\\\" v-show=!deleteChannels @click=hideChannel(channel) @click.stop> <use xlink:href=/assets/images/symbols_defs.svg#icon-eye></use> </svg> <svg class=\\\"close icon icon-cross\\\" v-show=deleteChannels @click=removeChannel(channel) @click.stop> <use xlink:href=/assets/images/symbols_defs.svg#icon-cross></use> </svg> <span class=channel-name>{{ channel }}</span> </li> </ul> </div> <div class=options> <svg class=\\\"delete-channels icon icon-bin\\\" :class=\\\"{'active' : deleteChannels}\\\" @click=allowRemoval()> <use xlink:href=/assets/images/symbols_defs.svg#icon-bin></use> </svg> </div> </div> \";\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=loading-bar v-show=sharedState.loadingIndicator transition=expand> <span class=loading-txt>Loading...</span> <svg class=\\\"loading-indicator icon icon-spinner\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-spinner></use> </svg> </div> \";\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=modal-mask v-show=show @click=closeMovie() transition=modal> <div class=modal-wrapper> <div class=modal-container v-if=movie @click.stop> <div class=modal-header> <svg class=\\\"modal-close icon icon-cross\\\" @click=closeMovie() @click.stop> <use pointer-events=visible xlink:href=/assets/images/symbols_defs.svg#icon-cross></use> </svg> </div> <div class=\\\"flex-video widescreen\\\" v-if=movie.embed> {{{ movie.embed.html }}} </div> <div class=movie-info> <h2 class=title>{{ movie.name }}</h2> <div class=by v-if=movie.user>by <span class=author><a v-bind:href=movie.user.link target=_blank rel=noreferrer>{{ movie.user.name }}</a></span> </div> <div class=description> {{ movie.description }} </div> </div> </div> </div> </div> \";\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=message-bar v-show=sharedState.screenMessage transition=expand> <div class=message-body> {{sharedState.screenMessage}} </div> </div> \";\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=scroll-top v-show=scrollAvailable transition=fade @click=toTheTop() @click.stop> <svg class=\\\"icon icon-chevron-c-up\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-chevron-c-up></use> </svg> </div> \";\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=sorting> <h5>Order by:</h5> <ul class=modes> <li :class=\\\"{'active' : this.sharedState.sortCondition === 'release_time'}\\\" @click=\\\"changeOrder('release_time')\\\"> <svg class=\\\"icon icon-calendar\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-calendar></use> </svg> Release time</li> <li :class=\\\"{'active' : this.sharedState.sortCondition === 'indieCinema.order'}\\\" @click=\\\"changeOrder('indieCinema.order')\\\"> <svg class=\\\"icon icon-box\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-box></use> </svg> Discovery time</li> </ul> </div> \";\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=video-index> <div class=video-grid> <ul> <li class=single-movie v-for=\\\"movie in movieListEdited\\\"> <div class=preview-wrapper @click=showMovie(movie)> <img class=lazyload v-bind:src=movie.pictures.sizes[0].link v-bind:data-src=movie.pictures.sizes[2].link alt=\\\"\\\"> </div> <div class=excerpt> <h4>{{ movie.name }}</h4> <div class=description> {{ movie.description }} </div> </div> </li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> </ul> </div> </div> <modal :show.sync=showModal :video.sync=videoModal></modal> \";\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(24)\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(36)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(25)\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(37)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(26)\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(38)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(28)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(40)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(30)\n\t__vue_script__ = __webpack_require__(16)\n\t__vue_template__ = __webpack_require__(42)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.8.0\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t  return typeof obj;\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t};\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function cb(response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar array = [];\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tfunction extend(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction legacy (options, next) {\n\t\n\t    var variables = [],\n\t        url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, legacy, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText || '';\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t}\n\t\n\tvar originUrl = Url.parse(location.href);\n\tvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (request.crossOrigin === null) {\n\t        request.crossOrigin = crossOrigin(request);\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!supportCors) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        request.emulateHTTP = false;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t}\n\t\n\tfunction mime (request, next) {\n\t\n\t    if (request.emulateJSON && isPlainObject(request.data)) {\n\t        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t        request.data = Url.params(request.data);\n\t    }\n\t\n\t    if (isObject(request.data) && /FormData/i.test(request.data.toString())) {\n\t        delete request.headers['Content-Type'];\n\t    }\n\t\n\t    if (isPlainObject(request.data)) {\n\t        request.data = JSON.stringify(request.data);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        try {\n\t            response.data = JSON.parse(response.data);\n\t        } catch (e) {}\n\t    });\n\t}\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            response = { request: request, data: null },\n\t            handler,\n\t            script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({ type: 'cancel' });\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = Url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function handler(event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.beforeSend)) {\n\t        request.beforeSend.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers['X-HTTP-Method-Override'] = request.method;\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction header (request, next) {\n\t\n\t    request.method = request.method.toUpperCase();\n\t    request.headers = extend({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\t\n\t    if (isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n\t        extend(request.params, request.data);\n\t        delete request.data;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.cancel();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n\t            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n\t            response.statusText = trim(xhr.statusText || '');\n\t            response.allHeaders = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (isPlainObject(request.xhr)) {\n\t            extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (isPlainObject(request.upload)) {\n\t            extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t}\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [];\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new Promise$1(function (resolve) {\n\t\n\t            function exec() {\n\t                reqHandlers.pop().call(context, request, next);\n\t            }\n\t\n\t            function next(response) {\n\t                when(response, function (response) {\n\t\n\t                    if (isFunction(response)) {\n\t\n\t                        resHandlers.unshift(response);\n\t                    } else if (isObject(response)) {\n\t\n\t                        processResponse(response);\n\t\n\t                        resHandlers.forEach(function (handler) {\n\t                            handler.call(context, response);\n\t                        });\n\t\n\t                        resolve(response);\n\t\n\t                        return;\n\t                    }\n\t\n\t                    exec();\n\t                });\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tfunction processResponse(response) {\n\t\n\t    var headers = response.headers || response.allHeaders;\n\t\n\t    if (isString(headers)) {\n\t        headers = parseHeaders(headers);\n\t    }\n\t\n\t    if (isObject(headers)) {\n\t        response.headers = function (name) {\n\t            return name ? headers[toLower(name)] : headers;\n\t        };\n\t    }\n\t\n\t    response.ok = response.status >= 200 && response.status < 300;\n\t\n\t    return response;\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    each(str.split('\\n'), function (row) {\n\t\n\t        i = row.indexOf(':');\n\t        name = trim(toLower(row.slice(0, i)));\n\t        value = trim(row.slice(i + 1));\n\t\n\t        if (headers[name]) {\n\t\n\t            if (isArray(headers[name])) {\n\t                headers[name].push(value);\n\t            } else {\n\t                headers[name] = [headers[name], value];\n\t            }\n\t        } else {\n\t\n\t            headers[name] = value;\n\t        }\n\t    });\n\t\n\t    return headers;\n\t}\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar jsonType = { 'Content-Type': 'application/json' };\n\t\n\tfunction Http(url, options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm),\n\t        request,\n\t        promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    options = isObject(url) ? url : extend({ url: url }, options);\n\t    request = merge({}, Http.options, self.$options, options);\n\t    promise = client(request).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t};\n\t\n\tHttp.interceptors = [before, timeout, jsonp, method, mime, header, cors];\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, extend({ method: method, data: data, success: success }, options));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = extend({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = extend({}, action),\n\t        params = {},\n\t        data,\n\t        success,\n\t        error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (isFunction(args[1])) {\n\t\n\t                if (isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function get() {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function get() {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function get() {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 24716b8449f689e9f5a6\n **/","import Vue from 'vue';\n\n// Accepts array of objects and removes duplicates\nfunction removeDuplicates(array, prop) {\n  var uniqueArray = [];\n  var uniqueObject = {};\n  var arrayLength = array.length;\n\n  // Generate objects identified by prop as key\n  for (var i = 0; i < arrayLength; i++) {\n    uniqueObject[array[i][prop]] = array[i];\n  }\n  // Insert objects into array\n  for (i = 0 in uniqueObject) {\n    uniqueArray.push(uniqueObject[i]);\n  }\n  return uniqueArray;\n}\n\nvar store = {\n  state: {\n    channelGroups: [{\n      'name': 'mix',\n      'channels': ['staffpicks', 'shortoftheweek', '31259', 'everythinganimated', 'documentaryfilm', '8048']\n    }, {\n      'name': 'film',\n      'channels': ['shortoftheweek', '31259', 'filmmakers', 'thefilmmakers', 'bfc']\n    }, {\n      'name': 'music',\n      'channels': ['8048', 'musicall', 'hdmusicvideos', 'musicvideos', 'musicvideoland']\n    }, {\n      'name': 'creative',\n      'channels': ['designcollector', '1nspirational', 'thegoodstuff', '5vimeobest', 'nothingshortof']\n    }],\n    loadingIndicator: false,\n    screenMessage: '',\n    movieList: [],\n    queryChannels: [], // Default, curated channels - indie film, music videos, documentary etc.\n    hiddenChannels: [], // Channels videos to hide\n    sortCondition: 'indieCinema.order', // Defines how movies are ordered\n    sortOrder: 1, // Asc or desc\n    currentPage: 1 // Current browsing page\n  },\n  setLoading: function (state) {\n    this.state.loadingIndicator = state;\n  },\n  setMessage: function (message) {\n    this.state.screenMessage = message;\n  },\n  setMovies: function (movies) {\n    this.state.movieList = movies;\n  },\n  getMovies: function () {\n    // Check if there are channel to get videos\n    if (!this.state.queryChannels.length > 0) {\n      return store.setMessage('There are no channels to show videos from');\n    }\n\n    // Show loading indicator\n    store.setLoading(true);\n    var movies = this.state.movieList;\n    var fetchPage = this.state.currentPage;\n    Vue.http({\n      url: '/api/get-videos?channels=' + this.state.queryChannels + '&page=' + fetchPage,\n      method: 'GET'\n    }).then(function (response) {\n      movies = movies.concat(response.data);\n      // Clear duplicates\n      var uniqueMovies = removeDuplicates(movies, 'uri');\n      // Turn off loading\n      store.setLoading(false);\n      // Update list of videos\n      store.setMovies(uniqueMovies);\n    }, function (error) {\n      // Turn off loading\n      store.setLoading(false);\n      return store.setMessage(error.data.message);\n    });\n  },\n  setHiddenChannels: function (channels) {\n    this.state.hiddenChannels = channels;\n  },\n  toggleHideChannel: function (channel) {\n    // Toggle channel from invisible channels\n    var channelPosition = this.state.hiddenChannels.indexOf(channel);\n    if (channelPosition !== -1) {\n      return this.state.hiddenChannels.splice(channelPosition, 1);\n    }\n    return this.state.hiddenChannels.push(channel);\n  },\n  setQueryChannels: function (channels) {\n    this.state.queryChannels = channels;\n  },\n  addQueryChannel: function (channel) {\n    this.state.queryChannels.push(channel);\n  },\n  removeQueryChannel: function (channel) {\n    var channelPosition = this.state.queryChannels.indexOf(channel);\n    if (channelPosition !== -1) {\n      return this.state.queryChannels.splice(channelPosition, 1);\n    }\n  },\n  setSortCondition: function (condition) {\n    this.state.sortCondition = condition;\n  },\n  setSortOrder: function (order) {\n    if (order === 'asc') {\n      this.state.sortOrder = 1;\n    } else {\n      this.state.sortOrder = -1;\n    }\n  },\n  setCurrentPage: function (pageNo) {\n    this.state.currentPage = pageNo;\n  }\n};\n\nexport default store;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/store.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ChannelGroups.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ChannelGroups.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ChannelGroups.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/ChannelGroups.vue\n ** module id = 2\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Loading.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Loading.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Loading.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/Loading.vue\n ** module id = 3\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./OnScreenMessage.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./OnScreenMessage.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./OnScreenMessage.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/OnScreenMessage.vue\n ** module id = 4\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ScrollToTop.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ScrollToTop.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ScrollToTop.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/ScrollToTop.vue\n ** module id = 5\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Sorting.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Sorting.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Sorting.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/Sorting.vue\n ** module id = 6\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./VideoGrid.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./VideoGrid.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./VideoGrid.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/VideoGrid.vue\n ** module id = 7\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 8\n ** module chunks = 0\n **/","/* eslint-disable */\n\nimport Vue from 'vue';\nimport VueResource from 'vue-resource'; // Web requests, Vue plugin\nimport VueRouter from 'vue-router'; // Routing , Vue plugin\n\nVue.use(VueRouter, 'localhost:3000'); //\nVue.use(VueResource);\n\n// Views\nimport CustomGroupView from './CustomGroupView';\nimport GroupView from './GroupView';\nimport NotFoundView from './NotFoundView';\n\n//Store\nimport store from './store';\n\nvar App = Vue.extend();\n\nvar router = new VueRouter({\n  history: true\n});\n\n// new Vue({\n//   el: 'body',\n//   components: {\n//     App\n//   }\n// });\n\nrouter.beforeEach(function () {\n  store.setCurrentPage(1);\n  store.setMovies([]);\n  store.setHiddenChannels([]);\n});\n\nrouter.map({\n  '/': {\n    component: CustomGroupView\n  },\n  '/group/:groupName': {\n    component: GroupView\n  },\n  '*': {\n    component: NotFoundView\n  }\n});\n\nrouter.start(App, '#app');\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/main.js\n **/","<template>\n  <div class=\"main-wrapper\">\n    <on-screen-message></on-screen-message>\n    <channel-groups></channel-groups>\n    <h1>IndieCinema</h1>\n\n    <content-management></content-management>\n\n    <sorting></sorting>\n\n    <video-grid></video-grid>\n    <loading></loading>\n    <scroll-to-top></scroll-to-top>\n  </div>\n</template>\n\n<script>\n'use strict';\n\nimport VideoGrid from './components/VideoGrid';\nimport OnScreenMessage from './components/OnScreenMessage';\nimport ContentManagement from './components/ContentManagement'; // Loading indicator component\nimport Sorting from './components/Sorting'; // Loading indicator component\nimport Loading from './components/Loading'; // Loading indicator component\nimport ScrollToTop from './components/ScrollToTop'; // Loading indicator component\nimport ChannelGroups from './components/ChannelGroups'; // Loading indicator component\n\nexport default {\n  components: {\n    VideoGrid,\n    OnScreenMessage,\n    Sorting,\n    ContentManagement,\n    Loading,\n    ScrollToTop,\n    ChannelGroups\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\nbody {\n  background: $light;\n  font-family: 'Open Sans', Helvetica, sans-serif;\n}\n\n.modal-open {\n  position: absolute;\n  overflow-y: hidden;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** CustomGroupView.vue?0f0f1673\n **/","<template>\n  <div class=\"main-wrapper\">\n    <on-screen-message></on-screen-message>\n    <channel-groups></channel-groups>\n    <h1>IndieCinema</h1>\n\n    <sorting></sorting>\n\n    <video-grid></video-grid>\n    <loading></loading>\n    <scroll-to-top></scroll-to-top>\n  </div>\n</template>\n\n<script>\n'use strict';\n\nimport VideoGrid from './components/VideoGrid';\nimport OnScreenMessage from './components/OnScreenMessage';\nimport Sorting from './components/Sorting'; // Loading indicator component\nimport Loading from './components/Loading'; // Loading indicator component\nimport ScrollToTop from './components/ScrollToTop'; // Loading indicator component\nimport ChannelGroups from './components/ChannelGroups'; // Loading indicator component\n\nimport store from './store';\n\nexport default {\n  components: {\n    VideoGrid,\n    OnScreenMessage,\n    Sorting,\n    Loading,\n    ScrollToTop,\n    ChannelGroups\n  },\n  data: function() {\n    return {\n      sharedState: store.state // Global store\n    };\n  },\n  route: {\n    data: function() {\n      function findChannelGroup(group) {\n        return group.name === currentGroup;\n      }\n\n      var currentGroup = this.$route.params.groupName;\n      var queryChannels = this.sharedState.channelGroups.find(findChannelGroup).channels;\n\n      store.setQueryChannels(queryChannels);\n      store.getMovies();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\nbody {\n  background: $light;\n  font-family: 'Open Sans', Helvetica, sans-serif;\n}\n\n.modal-open {\n  position: absolute;\n  overflow-y: hidden;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** GroupView.vue?139866e2\n **/","<template>\n  <div class=\"main-wrapper\">\n    <channel-groups></channel-groups>\n    <h1>IndieCinema</h1>\n    <div class=\"not-found\">\n      <h2 class=\"info\">Page you are looking for doesn't exist.</h2>\n      Let's get you <a v-link=\"'/'\">home.</a>\n    </div>\n  </div>\n</template>\n\n<script>\n'use strict';\n\nimport ChannelGroups from './components/ChannelGroups'; // Loading indicator component\n\nexport default {\n  components: {\n    ChannelGroups\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.not-found {\n  max-width: 960px;\n  margin: 2rem auto 0;\n  .info {\n    font-weight: 400;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** NotFoundView.vue?0bf09953\n **/","<template>\n  <div class=\"channel-groups\">\n    <ul>\n      <li class=\"group\" v-for=\"group in sharedState.channelGroups\">\n        <a class=\"group-name\" v-link=\"{ path: '/group/'+group.name, activeClass: 'active' }\">{{ group.name }}</a>\n      </li>\n      <li class=\"group\">\n        <a class=\"group-name\" v-link=\"{ path: '/', activeClass: 'active', exact: true }\">Your channels</a>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport store from '../store';\n\nexport default {\n  data: function() {\n    return {\n      sharedState: store.state\n    };\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.channel-groups {\n  border-bottom: 1px solid rgba($dark, .05);\n  padding: 0 1rem;\n  @include bp(md) {\n    padding: 0 2rem;\n  }\n  @include bp(xlg) {\n    padding: 0 4rem;\n  }\n  ul {\n    padding: 0;\n    margin: .5rem auto;\n  }\n  li {\n    display: inline;\n    margin-right: 1rem;\n  }\n  a {\n    color: rgba($dark, .5);\n    font-size: .9rem;\n    font-weight: 600;\n    transition: color .15s ease-in;\n    cursor: pointer;\n    text-decoration: none;\n    &:hover {\n      color: $primary;\n    }\n    &.active{\n      color: $primary;\n    }\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ChannelGroups.vue?76694038\n **/","<template>\n  <div class=\"add-new-channel-wrapper\">\n    <div class=\"add-new-channel\">\n      <label>Add channel</label>\n      <input autofocus autocomplete=\"off\" placeholder=\"e.g. eoadaily\" v-model=\"newChannel\" @keyup.enter=\"addChannel()\">\n      <svg class=\"icon icon-plus\" @click=\"addChannel()\">\n        <use xlink:href=\"/assets/images/symbols_defs.svg#icon-plus\"></use>\n      </svg>\n    </div>\n  </div>\n  <div class=\"action-bar clearfix\">\n    <div class=\"query-channels\">\n      <h5>Current channels:</h5>\n      <ul>\n        <li class=\"channel label\" v-for=\"channel in sharedState.queryChannels\">\n          <svg class=\"channel-visibility icon icon-eye\" :class=\"{'inactive' : this.sharedState.hiddenChannels.indexOf(channel) !== -1}\" v-show=\"!deleteChannels\" @click=\"hideChannel(channel)\" @click.stop>\n            <use xlink:href=\"/assets/images/symbols_defs.svg#icon-eye\"></use>\n          </svg>\n          <svg class=\"close icon icon-cross\" v-show=\"deleteChannels\" @click=\"removeChannel(channel)\" @click.stop>\n            <use xlink:href=\"/assets/images/symbols_defs.svg#icon-cross\"></use>\n          </svg>\n          <span class=\"channel-name\">{{ channel }}</span>\n        </li>\n      </ul>\n    </div>\n    <div class=\"options\">\n      <svg class=\"delete-channels icon icon-bin\" :class=\"{'active' : deleteChannels}\" @click=\"allowRemoval()\">\n        <use xlink:href=\"/assets/images/symbols_defs.svg#icon-bin\"></use>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<script>\n'use strict';\nimport store from '../store';\n\nconst localStorage = window.localStorage;\n\n// Accepts array of objects and removes duplicates\nfunction removeDuplicates(array, prop) {\n  var uniqueArray = [];\n  var uniqueObject = {};\n  var arrayLength = array.length;\n\n  // Generate objects identified by prop as key\n  for (var i = 0; i < arrayLength; i++) {\n    uniqueObject[array[i][prop]] = array[i];\n  }\n  // Insert objects into array\n  for (i = 0 in uniqueObject) {\n    uniqueArray.push(uniqueObject[i]);\n  }\n  return uniqueArray;\n}\n\nexport default {\n  data: function() {\n    return {\n      newChannel: '', // Placeholder for new channel\n      deleteChannels: false, // Option to delete channel\n      sharedState: store.state // Global store\n    };\n  },\n  methods: {\n    addChannel() {\n      // Remove whitespace on ends\n      var addChannel = this.newChannel.trim();\n\n      // Check if there is a valid(ish) value\n      if (!addChannel) {\n        return store.setMessage('Channel name can not be empty');\n      }\n\n      if (/^[a-zA-Z\\u00C0-\\u017F]+,\\s[a-zA-Z\\u00C0-\\u017F]+$/.test(addChannel)) {\n        return store.setMessage('Channel name can not contain accented characters');\n      }\n\n      // Check if channel already exists in the array of channels\n      if (this.sharedState.queryChannels.indexOf(addChannel) !== -1) {\n        return store.setMessage('This channel is already present');\n      }\n\n      var movies = this.sharedState.movieList; // Get list of already showed movies\n      store.setLoading(true);\n\n      this.$http({\n        url: '/api/get-videos-single?channel=' + addChannel,\n        method: 'GET'\n      }).then(function(response) {\n        // Add videos to array\n        movies = movies.concat(response.data);\n        // Clear duplicates\n        var uniqueMovies = removeDuplicates(movies, 'uri');\n        // Update list of videos\n        store.setMovies(uniqueMovies);\n        // Turn off loading\n        store.setLoading(false);\n        // Add channel to the array with channels\n        store.addQueryChannel(addChannel);\n        localStorage.setItem('myChannels', JSON.stringify(this.sharedState.queryChannels));\n      }, function(error) {\n        // Turn off loading\n        store.setLoading(false);\n        return store.setMessage(error.data.message);\n      });\n      // Clear input\n      this.newChannel = '';\n    },\n    allowRemoval() {\n      if (this.deleteChannels === false) {\n        return this.$set('deleteChannels', true);\n      }\n      this.$set('deleteChannels', false);\n    },\n    removeChannel(channel) {\n      store.removeQueryChannel(channel);\n\n      if (!this.sharedState.queryChannels.length > 0) {\n        store.setMovies([]);\n      }\n      localStorage.setItem('myChannels', JSON.stringify(this.sharedState.queryChannels));\n\n      // After channel is removed, filter out movies that belong to that channel - no query\n      var movies = this.sharedState.movieList;\n      var queryChannels = this.sharedState.queryChannels;\n\n      function filterByExistingChannel(movie) {\n        if (queryChannels.indexOf(movie.indieCinema.channel) !== -1) {\n          return true;\n        }\n      }\n      var cleanMovies = movies.filter(filterByExistingChannel);\n      store.setMovies(cleanMovies);\n    },\n    hideChannel(channel) {\n      store.toggleHideChannel(channel);\n      localStorage.setItem('hiddenChannels', JSON.stringify(this.sharedState.hiddenChannels));\n    }\n  },\n  created: function() {\n    // Get list of channels\n    var customChannels = localStorage.getItem('myChannels');\n    if (customChannels) {\n      customChannels = JSON.parse(customChannels);\n      store.setQueryChannels(customChannels);\n    } else {\n      var exampleChannels = ['staffpicks', 'everythinganimated', '5vimeobest']; // Just a taste of channels, less overwhalming than a group\n      store.setQueryChannels(exampleChannels);\n    }\n    // Get list of hidden channels\n    var hiddenChannels = JSON.parse(localStorage.getItem('hiddenChannels'));\n    if (hiddenChannels) {\n      store.setHiddenChannels(hiddenChannels);\n    }\n  },\n  ready: function() {\n    store.getMovies();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.add-new-channel-wrapper {\n  text-align: center;\n  @include bp(md) {\n    margin: 2rem 0 0 0;\n    font-size: 2.5rem;\n  }\n  @include bp(lg) {\n    margin: 4rem 0 0 0;\n    font-size: 3rem;\n  }\n}\n\n.add-new-channel {\n  display: inline-block;\n  text-align: center;\n  margin: auto;\n  label {\n    display: block;\n    text-align: left;\n    margin: auto auto .5rem 1.5rem;\n    font-size: .95rem;\n    font-weight: 600;\n    color: $dark;\n  }\n  input {\n    height: 48px;\n    border-radius: 1000px;\n    border: 2px solid rgba($dark, .25);\n    padding: 0 1.5rem;\n    vertical-align: top;\n    font-size: .95rem;\n    font-style: italic;\n    width: 200px;\n    transition: border-color .2s ease-in;\n    &:focus {\n      outline: 0;\n      border-color: $primary;\n    }\n    @include bp(md) {\n      width: 500px;\n    }\n  }\n  .icon {\n    height: 2rem;\n    width: 2rem;\n    margin-top: 10px;\n    color: rgba($primary, .25);\n    transition: color .2s ease-in;\n    &:hover {\n      cursor: pointer;\n      color: rgba($primary, 1);\n    }\n  }\n}\n\n.action-bar {\n  padding: 0 1rem;\n  margin: 2rem auto;\n  @include bp(md) {\n    padding: 0 2rem;\n    margin: 4rem auto 2rem;\n  }\n  @include bp(xlg) {\n    padding: 0 4rem;\n    margin: 2rem auto 2rem;\n  }\n}\n\n.query-channels {\n  width: 70%;\n  float: left;\n  @include bp(xlg) {\n    width: 70%;\n    margin: 4rem 0 0 0;\n  }\n  h5 {\n    font-size: .95rem;\n    margin: 0 0 .5rem 0;\n    color: rgba($dark, .5);\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n  li {\n    display: inline-block;\n    margin: .5rem 1rem .5rem 0;\n    font-weight: 600;\n    font-size: .95rem;\n    @include bp(xlg) {\n      margin: auto 1.5rem auto 0;\n    }\n  }\n  .icon {\n    height: .75rem;\n    width: .75rem;\n    margin: 3px 5px 0 0;\n    float: left;\n    cursor: pointer;\n    color: rgba($dark, .25);\n    transition: color .2s ease-in;\n    &:hover,\n    &:active {\n      color: $primary;\n    }\n  }\n  .channel-visibility {\n    color: $primary;\n    &.inactive {\n      color: rgba($dark, .25);\n    }\n  }\n  .channel-name {\n    float: right;\n    font-size: .95rem;\n    text-transform: lowercase;\n  }\n}\n\n.options {\n  padding: 0 1rem;\n  text-align: right;\n  width: 15%;\n  float: right;\n  @include bp(md) {\n    padding: 0;\n  }\n  @include bp(xlg) {\n    padding: 0;\n    margin: 4rem 0 0 0;\n  }\n  .icon {\n    cursor: pointer;\n    display: inline-block;\n    color: rgba($dark, .25);\n    transition: color .2s ease-in;\n    &:hover,\n    &:active {\n      color: $primary;\n      opacity: 1;\n    }\n  }\n  .delete-channels.active {\n    color: $warning;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ContentManagement.vue?4835176e\n **/","<template>\n  <div class=\"loading-bar\" v-show=\"sharedState.loadingIndicator\" transition=\"expand\">\n    <span class=\"loading-txt\">Loading...</span>\n    <svg class=\"loading-indicator icon icon-spinner\">\n      <use xlink:href=\"/assets/images/symbols_defs.svg#icon-spinner\"></use>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport store from '../store';\nexport default {\n  data: function() {\n    return {\n      sharedState: store.state\n    };\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.loading-bar {\n  position: fixed;\n  width: 100%;\n  background: $light;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-indicator {\n  color: $primary;\n  height: 36px;\n  display: inline-block;\n  animation-name: spin;\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n}\n\n.loading-txt {\n  color: rgba($dark, .25);\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 .5rem 0 0;\n}\n\n.expand-transition {\n  transition: all .3s ease;\n  height: 50px;\n}\n\n\n/* .expand-enter defines the starting state for entering\n.expand-leave defines the ending state for leaving */\n\n.expand-enter,\n.expand-leave {\n  height: 0px;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Loading.vue?608b0bfb\n **/","<template>\n  <div class=\"modal-mask\" v-show=\"show\" @click=\"closeMovie()\" transition=\"modal\">\n    <div class=\"modal-wrapper\">\n      <div class=\"modal-container\" v-if=\"movie\" @click.stop>\n        <div class=\"modal-header\">\n          <svg class=\"modal-close icon icon-cross\" @click=\"closeMovie()\" @click.stop>\n            <use pointer-events=\"visible\" xlink:href=\"/assets/images/symbols_defs.svg#icon-cross\"></use>\n          </svg>\n        </div>\n        <div class=\"flex-video widescreen\" v-if=\"movie.embed\">\n          {{{ movie.embed.html }}}\n        </div>\n        <div class=\"movie-info\">\n          <h2 class=\"title\">{{ movie.name }}</h2>\n          <div class=\"by\" v-if=\"movie.user\">by\n            <span class=\"author\"><a v-bind:href=\"movie.user.link\" target=\"_blank\" rel=\"noreferrer\">{{ movie.user.name }}</a></span>\n          </div>\n          <div class=\"description\">\n            {{ movie.description }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n'use strict';\n\nexport default {\n  props: {\n    show: {\n      type: Boolean,\n      required: true,\n      twoWay: true\n    },\n    video: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data: function() {\n    return {\n      movie: {}\n    };\n  },\n\n  methods: {\n    closeMovie() {\n      // Clear movie info\n      this.movie = {};\n      // Hide modal\n      this.show = false;\n    }\n  },\n\n  watch: {\n    'show': function() {\n      var appWrapper = document.getElementById('body-content-wrapper');\n      if (this.show === true) {\n        this.$set('movie', this.video);\n        // Add class to body limiting its scrolling with overflow\n        appWrapper.classList.add('modal-open');\n      } else {\n        // Remove class from body to return scrolling availability\n        appWrapper.classList.remove('modal-open');\n      }\n    }\n  },\n\n  ready: function() {\n    // Closes modal on escape\n    document.addEventListener('keydown', (event) => {\n      // Check if modal is open and key is esc\n      if (this.show && event.keyCode === 27) {\n        this.closeMovie();\n      }\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.modal-mask {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark, .9);\n  transition: opacity .2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow-y: auto;\n}\n\n.modal-wrapper {\n  z-index: 1010;\n  margin: auto;\n  left: 0;\n  right: 0;\n}\n\n.modal-container {\n  width: 100%;\n  margin: 0px auto;\n  background-color: $light;\n  transition: all .3s ease;\n  text-align: left;\n  @include bp(md) {\n    width: 600px;\n  }\n  @include bp(xl) {\n    width: 960px;\n  }\n}\n\n.modal-header {\n  text-align: right;\n  padding: .25rem .25rem;\n}\n\n.modal-close {\n  font-size: 1.3rem;\n  margin: 3px 5px 0 0;\n  cursor: pointer;\n  color: rgba($dark, .25);\n  transition: color .2s ease-in;\n  &:hover,\n  &:active {\n    color: $primary;\n    opacity: 1;\n  }\n}\n\n.flex-video {\n  height: 0;\n  padding-top: 25px;\n  padding-bottom: 67.5%;\n  margin-bottom: 10px;\n  position: relative;\n  overflow: hidden;\n  &.widescreen {\n    padding-bottom: 56.34%;\n  }\n  iframe {\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n  }\n}\n\n.movie-info {\n  position: relative;\n  padding: 0 1rem 1rem;\n  .title {\n    margin: .5rem auto 0;\n  }\n  .by a {\n    text-decoration: none;\n    color: $primary;\n    font-weight: 600;\n    padding: 0 2px;\n    transition: background .2s ease-in, color .2s ease-in;\n    &:hover {\n      background: $primary;\n      color: $light;\n    }\n  }\n  .description {\n    margin: 1rem auto;\n    white-space: pre-line;\n    line-height: 1.5;\n    font-size: .95rem;\n    line-height: 1.5;\n  }\n}\n\n\n/*\n * the following styles are auto-applied to elements with\n * v-transition=\"modal\" when their visiblity is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n\n.modal-enter,\n.modal-leave {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave .modal-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Modal.vue?dbe6ab02\n **/","<template>\n  <div class=\"message-bar\" v-show=\"sharedState.screenMessage\" transition=\"expand\">\n    <div class=\"message-body\">\n      {{sharedState.screenMessage}}\n    </div>\n  </div>\n</template>\n\n<script>\nimport store from '../store';\n\nexport default {\n  data: function() {\n    return {\n      sharedState: store.state\n    };\n  },\n  watch: {\n    'sharedState.screenMessage': function() {\n      if (this.sharedState.screenMessage) {\n        setTimeout(function() {\n          store.setMessage('');\n        }, 3000);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.message-bar {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  width: 100%;\n  background: rgba($dark, .5);\n  color: $light;\n  font-weight: 600;\n}\n\n.expand-transition {\n  transition: all .3s ease;\n  height: 50px;\n}\n\n\n/* .expand-enter defines the starting state for entering */\n\n\n/* .expand-leave defines the ending state for leaving */\n\n.expand-enter,\n.expand-leave {\n  height: 0px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** OnScreenMessage.vue?5880f03c\n **/","<template>\n  <div class=\"scroll-top\" v-show=\"scrollAvailable\" transition=\"fade\" @click=\"toTheTop()\" @click.stop>\n    <svg class=\"icon icon-chevron-c-up\">\n      <use xlink:href=\"/assets/images/symbols_defs.svg#icon-chevron-c-up\"></use>\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      scrollAvailable: false\n    };\n  },\n  methods: {\n    toTheTop() {\n      function scrollTop(duration) {\n        var step = -document.body.scrollHeight / duration;\n        var scrolling = setInterval(function() {\n          if (window.scrollY !== 0) {\n            return window.scrollBy(0, step);\n          }\n          return clearInterval(scrolling);\n        }, duration / 24);\n      }\n      scrollTop(125);\n    }\n  },\n  ready: function() {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 0) {\n        return this.$set('scrollAvailable', true);\n      }\n      return this.$set('scrollAvailable', false);\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\n.scroll-top {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  opacity: .5;\n  &:hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n  @include bp(md) {\n    bottom: 1rem;\n    right: 2rem;\n  }\n  .icon {\n    height: 1.5rem;\n    width: 1.5rem;\n    background: $light;\n    color: $dark;\n    padding: .5rem;\n    border-radius: 1000px;\n  }\n}\n\n.fade-transition {\n  transition: all .3s ease;\n  opacity: .5;\n}\n\n\n/* .expand-enter defines the starting state for entering */\n\n\n/* .expand-leave defines the ending state for leaving */\n\n.fade-enter,\n.fade-leave {\n  opacity: 0;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ScrollToTop.vue?00176580\n **/","<template>\n  <div class=\"sorting\">\n    <h5>Order by:</h5>\n    <ul class=\"modes\">\n      <li :class=\"{'active' : this.sharedState.sortCondition === 'release_time'}\" @click=\"changeOrder('release_time')\">\n        <svg class=\"icon icon-calendar\">\n          <use xlink:href=\"/assets/images/symbols_defs.svg#icon-calendar\"></use>\n        </svg>\n        Release time</li>\n      <li :class=\"{'active' : this.sharedState.sortCondition === 'indieCinema.order'}\" @click=\"changeOrder('indieCinema.order')\">\n        <svg class=\"icon icon-box\">\n          <use xlink:href=\"/assets/images/symbols_defs.svg#icon-box\"></use>\n        </svg>\n        Discovery time</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport store from '../store';\n\nexport default {\n  data: function() {\n    return {\n      sharedState: store.state // Global store\n    };\n  },\n  methods: {\n    changeOrder(condition) {\n      store.setSortCondition(condition);\n      if (condition === 'indieCinema.order') {\n        return store.setSortOrder('asc');\n      }\n      return store.setSortOrder('desc');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\nh5 {\n  font-size: .95rem;\n  color: rgba($dark, .5);\n  margin: 0 0 .5rem 0;\n}\n\n.sorting {\n  padding: 0 1rem;\n  margin: 2rem auto;\n  @include bp(md) {\n    padding: 0 2rem;\n  }\n  @include bp(xlg) {\n    padding: 0 4rem;\n  }\n}\n\n.sorting .modes {\n  display: inline;\n  padding: 0;\n  li {\n    display: inline;\n    font-weight: 600;\n    margin: auto 1rem auto 0;\n    transition: color .2s ease-in;\n    cursor: pointer;\n    color: rgba($dark, .5);\n  }\n  li:hover,\n  li.active {\n    color: $primary;\n  }\n  .icon {\n    height: .75rem;\n    width: .75rem;\n    margin: 3px 5px 0 0;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Sorting.vue?93781a94\n **/","<template>\n  <div class=\"video-index\">\n    <div class=\"video-grid\">\n      <ul>\n        <li class=\"single-movie\" v-for=\"movie in movieListEdited\">\n          <div class=\"preview-wrapper\" @click=\"showMovie(movie)\">\n            <img class=\"lazyload\" v-bind:src=\"movie.pictures.sizes[0].link\" v-bind:data-src=\"movie.pictures.sizes[2].link\" alt=\"\">\n          </div>\n          <div class=\"excerpt\">\n            <h4>{{ movie.name }}</h4>\n            <div class=\"description\">\n              {{ movie.description }}\n            </div>\n          </div>\n        </li>\n        <!-- Hacky way to make elements of last row (when not full) behave when using justify: space-between -->\n        <li class=\"single-movie\"></li>\n        <li class=\"single-movie\"></li>\n        <li class=\"single-movie\"></li>\n        <li class=\"single-movie\"></li>\n        <li class=\"single-movie\"></li>\n        <li class=\"single-movie\"></li>\n      </ul>\n    </div>\n  </div>\n  <modal :show.sync=\"showModal\" :video.sync=\"videoModal\"></modal>\n</template>\n\n<script>\n'use strict';\n\nimport Modal from './Modal'; // Modal component\nimport store from '../store';\nimport 'lazysizes';\n\nexport default {\n  components: {\n    Modal\n  },\n  data: function() {\n    return {\n      showModal: false, // Modal's initial state\n      videoModal: {}, // Pass video info to modal\n      sharedState: store.state // Global store\n    };\n  },\n  computed: {\n    movieListEdited: function() {\n      var movies = this.sharedState.movieList;\n      var hiddenChannels = this.sharedState.hiddenChannels;\n      var sortCondition = this.sharedState.sortCondition;\n      var sortOrder = this.sharedState.sortOrder;\n\n      function sortBy(condition, order) {\n        var props = condition.split('.');\n\n        return function(a, b) {\n          props.forEach(function(prop) {\n            a = a[prop];\n            b = b[prop];\n          });\n          if (a < b) {\n            return -1 * order;\n          } else if (a > b) {\n            return 1 * order;\n          } else {\n            return 0;\n          }\n        };\n      };\n\n      function filterOutHidden(movie) {\n        if (hiddenChannels.indexOf(movie.indieCinema.channel) === -1) {\n          return true;\n        }\n      };\n\n      return movies.filter(filterOutHidden).sort(sortBy(sortCondition, sortOrder));\n    }\n  },\n  methods: {\n    showMovie(video) {\n      // Show modal and pass movie's URI for data query\n      this.videoModal = video;\n      this.showModal = true;\n    }\n  },\n  ready: function() {\n    window.addEventListener('scroll', () => {\n      var scrollHeight = document.body.scrollHeight;\n      var scrollTop = document.body.scrollTop;\n      var windowHeight = window.innerHeight;\n      var offset = 250;\n      if (scrollTop >= scrollHeight - windowHeight - offset && this.sharedState.loadingIndicator === false) {\n        var nextPage = this.sharedState.currentPage + 1;\n        store.setCurrentPage(nextPage);\n        return store.getMovies();\n      }\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./utils/sass/styling\";\nh1 {\n  font-family: 'Old Standard TT', serif;\n  font-weight: bold;\n  text-align: center;\n  font-size: 2rem;\n  @include bp(md) {\n    margin: 2rem 0 0 0;\n    font-size: 2.5rem;\n  }\n  @include bp(lg) {\n    margin: 4rem 0 0 0;\n    font-size: 3rem;\n  }\n}\n\n.video-grid {\n  clear: both;\n  padding: 0 1rem;\n  @include bp(md) {\n    padding: 0 2rem;\n  }\n  @include bp(xlg) {\n    padding: 0 4rem;\n  }\n  ul {\n    padding: 0;\n    margin: auto;\n    display: flex;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-around;\n    list-style-type: none;\n  }\n  .single-movie {\n    max-width: 100%;\n    flex: 295px 1;\n    margin: 0 auto 2rem;\n    img {\n      width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.preview-wrapper {\n  cursor: pointer;\n}\n\n.excerpt {\n  padding: 0 .5rem;\n  h4 {\n    margin: .25rem auto;\n    font-size: .95rem;\n    font-weight: 700;\n  }\n  .description {\n    max-width: 100%;\n    width: 250px;\n    height: 25px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: .9rem;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** VideoGrid.vue?640e30f5\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 21\n ** module chunks = 0\n **/","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/json/stringify.js\n ** module id = 22\n ** module chunks = 0\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_core.js\n ** module id = 23\n ** module chunks = 0\n **/","(function(window, factory) {\n\tvar lazySizes = factory(window, window.document);\n\twindow.lazySizes = lazySizes;\n\tif(typeof module == 'object' && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(window, function l(window, document) {\n\t'use strict';\n\t/*jshint eqnull:true */\n\tif(!document.getElementsByClassName){return;}\n\n\tvar lazySizesConfig;\n\n\tvar docElem = document.documentElement;\n\n\tvar Date = window.Date;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\tvar addEventListener = window[_addEventListener];\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('CustomEvent');\n\n\t\tevent.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar fns = [];\n\n\t\tvar run = function(){\n\t\t\tvar fn;\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\t\t\twhile(fns.length){\n\t\t\t\tfn = fns.shift();\n\t\t\t\tfn[0].apply(fn[1], fn[2]);\n\t\t\t}\n\t\t\trunning = false;\n\t\t};\n\n\t\treturn function(fn){\n\t\t\tif(running){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push([fn, this, arguments]);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = 125;\n\t\tvar RIC_DEFAULT_TIMEOUT = 999;\n\t\tvar rICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\t\t\t\tif(rICTimeout !== RIC_DEFAULT_TIMEOUT){\n\t\t\t\t\trICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\t\t\t}\n\t\t\t}:\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 66;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || (delay < 9 && requestIdleCallback)){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\n\tvar loader = (function(){\n\t\tvar lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom;\n\n\t\tvar defaultExpand, preloadExpand, hFac;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/glebot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = 0;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(e && e.target){\n\t\t\t\taddRemoveLoadEvents(e.target, resetPreloading);\n\t\t\t}\n\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;\n\n\t\t\tif((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tif(preloadExpand == null){\n\t\t\t\t\tif(!('expand' in lazySizesConfig)){\n\t\t\t\t\t\tlazySizesConfig.expand = docElem.clientHeight > 500 ? 500 : 400;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefaultExpand = lazySizesConfig.expand;\n\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesConfig.expFactor;\n\t\t\t\t}\n\n\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 3 && loadMode > 2){\n\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\tlowRuns = 0;\n\t\t\t\t} else if(loadMode > 1 && lowRuns > 2 && isLoading < 6){\n\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t}\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\taddClass(e.target, lazySizesConfig.loadedClass);\n\t\t\tremoveClass(e.target, lazySizesConfig.loadingClass);\n\t\t\taddRemoveLoadEvents(e.target, rafSwitchLoadingClass);\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\ttry {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} catch(e){\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia, parent;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\n\t\t\t//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572\n\t\t\tif(customMedia){\n\t\t\t\tparent = source.parentNode;\n\t\t\t\tparent.insertBefore(source.cloneNode(), source);\n\t\t\t\tparent.removeChild(source);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesConfig.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesConfig.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\taddRemoveLoadEvents(elem, resetPreloading, true);\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\n\t\t\t\t\taddClass(elem, lazySizesConfig.loadingClass);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(srcset || isPicture){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trAF(function(){\n\t\t\t\tif(elem._lazyRace){\n\t\t\t\t\tdelete elem._lazyRace;\n\t\t\t\t}\n\t\t\t\tremoveClass(elem, lazySizesConfig.lazyClass);\n\n\t\t\t\tif( !firesLoad || elem.complete ){\n\t\t\t\t\tif(firesLoad){\n\t\t\t\t\t\tresetPreloading(event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisLoading--;\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tvar unveilElement = function (elem){\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar afterScroll = debounce(function(){\n\t\t\t\tlazySizesConfig.loadMode = 3;\n\t\t\t\tthrottledCheckElements();\n\t\t\t});\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesConfig.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', function(){\n\t\t\t\tif(lazySizesConfig.loadMode == 3){\n\t\t\t\t\tlazySizesConfig.loadMode = 2;\n\t\t\t\t}\n\t\t\t\tafterScroll();\n\t\t\t}, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);\n\t\t\t\thFac = lazySizesConfig.hFac;\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tthrottledCheckElements(lazyloadElems.length > 0);\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2\n\t\t};\n\n\t\tlazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesConfig)){\n\t\t\t\tlazySizesConfig[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\n\t\twindow.lazySizesConfig = lazySizesConfig;\n\n\t\tsetTimeout(function(){\n\t\t\tif(lazySizesConfig.init){\n\t\t\t\tinit();\n\t\t\t}\n\t\t});\n\t})();\n\n\treturn {\n\t\tcfg: lazySizesConfig,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n}\n));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lazysizes/lazysizes.js\n ** module id = 35\n ** module chunks = 0\n **/","module.exports = \" <div class=main-wrapper> <on-screen-message></on-screen-message> <channel-groups></channel-groups> <h1>IndieCinema</h1> <content-management></content-management> <sorting></sorting> <video-grid></video-grid> <loading></loading> <scroll-to-top></scroll-to-top> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/CustomGroupView.vue\n ** module id = 36\n ** module chunks = 0\n **/","module.exports = \" <div class=main-wrapper> <on-screen-message></on-screen-message> <channel-groups></channel-groups> <h1>IndieCinema</h1> <sorting></sorting> <video-grid></video-grid> <loading></loading> <scroll-to-top></scroll-to-top> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/GroupView.vue\n ** module id = 37\n ** module chunks = 0\n **/","module.exports = \" <div class=main-wrapper> <channel-groups></channel-groups> <h1>IndieCinema</h1> <div class=not-found> <h2 class=info>Page you are looking for doesn't exist.</h2> Let's get you <a v-link=\\\"'/'\\\">home.</a> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/NotFoundView.vue\n ** module id = 38\n ** module chunks = 0\n **/","module.exports = \" <div class=channel-groups> <ul> <li class=group v-for=\\\"group in sharedState.channelGroups\\\"> <a class=group-name v-link=\\\"{ path: '/group/'+group.name, activeClass: 'active' }\\\">{{ group.name }}</a> </li> <li class=group> <a class=group-name v-link=\\\"{ path: '/', activeClass: 'active', exact: true }\\\">Your channels</a> </li> </ul> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/ChannelGroups.vue\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = \" <div class=add-new-channel-wrapper> <div class=add-new-channel> <label>Add channel</label> <input autofocus autocomplete=off placeholder=\\\"e.g. eoadaily\\\" v-model=newChannel @keyup.enter=addChannel()> <svg class=\\\"icon icon-plus\\\" @click=addChannel()> <use xlink:href=/assets/images/symbols_defs.svg#icon-plus></use> </svg> </div> </div> <div class=\\\"action-bar clearfix\\\"> <div class=query-channels> <h5>Current channels:</h5> <ul> <li class=\\\"channel label\\\" v-for=\\\"channel in sharedState.queryChannels\\\"> <svg class=\\\"channel-visibility icon icon-eye\\\" :class=\\\"{'inactive' : this.sharedState.hiddenChannels.indexOf(channel) !== -1}\\\" v-show=!deleteChannels @click=hideChannel(channel) @click.stop> <use xlink:href=/assets/images/symbols_defs.svg#icon-eye></use> </svg> <svg class=\\\"close icon icon-cross\\\" v-show=deleteChannels @click=removeChannel(channel) @click.stop> <use xlink:href=/assets/images/symbols_defs.svg#icon-cross></use> </svg> <span class=channel-name>{{ channel }}</span> </li> </ul> </div> <div class=options> <svg class=\\\"delete-channels icon icon-bin\\\" :class=\\\"{'active' : deleteChannels}\\\" @click=allowRemoval()> <use xlink:href=/assets/images/symbols_defs.svg#icon-bin></use> </svg> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/ContentManagement.vue\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = \" <div class=loading-bar v-show=sharedState.loadingIndicator transition=expand> <span class=loading-txt>Loading...</span> <svg class=\\\"loading-indicator icon icon-spinner\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-spinner></use> </svg> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/Loading.vue\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = \" <div class=modal-mask v-show=show @click=closeMovie() transition=modal> <div class=modal-wrapper> <div class=modal-container v-if=movie @click.stop> <div class=modal-header> <svg class=\\\"modal-close icon icon-cross\\\" @click=closeMovie() @click.stop> <use pointer-events=visible xlink:href=/assets/images/symbols_defs.svg#icon-cross></use> </svg> </div> <div class=\\\"flex-video widescreen\\\" v-if=movie.embed> {{{ movie.embed.html }}} </div> <div class=movie-info> <h2 class=title>{{ movie.name }}</h2> <div class=by v-if=movie.user>by <span class=author><a v-bind:href=movie.user.link target=_blank rel=noreferrer>{{ movie.user.name }}</a></span> </div> <div class=description> {{ movie.description }} </div> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/Modal.vue\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = \" <div class=message-bar v-show=sharedState.screenMessage transition=expand> <div class=message-body> {{sharedState.screenMessage}} </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/OnScreenMessage.vue\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = \" <div class=scroll-top v-show=scrollAvailable transition=fade @click=toTheTop() @click.stop> <svg class=\\\"icon icon-chevron-c-up\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-chevron-c-up></use> </svg> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/ScrollToTop.vue\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = \" <div class=sorting> <h5>Order by:</h5> <ul class=modes> <li :class=\\\"{'active' : this.sharedState.sortCondition === 'release_time'}\\\" @click=\\\"changeOrder('release_time')\\\"> <svg class=\\\"icon icon-calendar\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-calendar></use> </svg> Release time</li> <li :class=\\\"{'active' : this.sharedState.sortCondition === 'indieCinema.order'}\\\" @click=\\\"changeOrder('indieCinema.order')\\\"> <svg class=\\\"icon icon-box\\\"> <use xlink:href=/assets/images/symbols_defs.svg#icon-box></use> </svg> Discovery time</li> </ul> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/Sorting.vue\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = \" <div class=video-index> <div class=video-grid> <ul> <li class=single-movie v-for=\\\"movie in movieListEdited\\\"> <div class=preview-wrapper @click=showMovie(movie)> <img class=lazyload v-bind:src=movie.pictures.sizes[0].link v-bind:data-src=movie.pictures.sizes[2].link alt=\\\"\\\"> </div> <div class=excerpt> <h4>{{ movie.name }}</h4> <div class=description> {{ movie.description }} </div> </div> </li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> <li class=single-movie></li> </ul> </div> </div> <modal :show.sync=showModal :video.sync=videoModal></modal> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/VideoGrid.vue\n ** module id = 46\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../node_modules/vue-loader/lib/style-rewriter.js!sass!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./CustomGroupView.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./CustomGroupView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./CustomGroupView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/CustomGroupView.vue\n ** module id = 47\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../node_modules/vue-loader/lib/style-rewriter.js!sass!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./GroupView.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./GroupView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./GroupView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/GroupView.vue\n ** module id = 48\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../node_modules/vue-loader/lib/style-rewriter.js!sass!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./NotFoundView.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./NotFoundView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./NotFoundView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/NotFoundView.vue\n ** module id = 49\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ContentManagement.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ContentManagement.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ContentManagement.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/ContentManagement.vue\n ** module id = 50\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"remove\\\":true}!css!./../../node_modules/vue-loader/lib/style-rewriter.js!sass!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Modal.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Modal.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/Modal.vue\n ** module id = 51\n ** module chunks = 0\n **/","/*!\n * vue-resource v0.8.0\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\np.success = function (callback) {\n\n    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function cb(response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nvar isArray = Array.isArray;\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nfunction extend(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg);\n    });\n\n    return target;\n}\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg, true);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\nfunction legacy (options, next) {\n\n    var variables = [],\n        url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, legacy, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText || '';\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n}\n\nvar originUrl = Url.parse(location.href);\nvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (request.crossOrigin === null) {\n        request.crossOrigin = crossOrigin(request);\n    }\n\n    if (request.crossOrigin) {\n\n        if (!supportCors) {\n            request.client = xdrClient;\n        }\n\n        request.emulateHTTP = false;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n}\n\nfunction mime (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.data)) {\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        request.data = Url.params(request.data);\n    }\n\n    if (isObject(request.data) && /FormData/i.test(request.data.toString())) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.data)) {\n        request.data = JSON.stringify(request.data);\n    }\n\n    next(function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n            response = { request: request, data: null },\n            handler,\n            script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({ type: 'cancel' });\n        };\n\n        script = document.createElement('script');\n        script.src = Url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function handler(event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.beforeSend)) {\n        request.beforeSend.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = extend({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    if (isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n        extend(request.params, request.data);\n        delete request.data;\n    }\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.cancel();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n            response.statusText = trim(xhr.statusText || '');\n            response.allHeaders = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (isPlainObject(request.xhr)) {\n            extend(xhr, request.xhr);\n        }\n\n        if (isPlainObject(request.upload)) {\n            extend(xhr.upload, request.upload);\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [];\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n                reqHandlers.pop().call(context, request, next);\n            }\n\n            function next(response) {\n                when(response, function (response) {\n\n                    if (isFunction(response)) {\n\n                        resHandlers.unshift(response);\n                    } else if (isObject(response)) {\n\n                        processResponse(response);\n\n                        resHandlers.forEach(function (handler) {\n                            handler.call(context, response);\n                        });\n\n                        resolve(response);\n\n                        return;\n                    }\n\n                    exec();\n                });\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nfunction processResponse(response) {\n\n    var headers = response.headers || response.allHeaders;\n\n    if (isString(headers)) {\n        headers = parseHeaders(headers);\n    }\n\n    if (isObject(headers)) {\n        response.headers = function (name) {\n            return name ? headers[toLower(name)] : headers;\n        };\n    }\n\n    response.ok = response.status >= 200 && response.status < 300;\n\n    return response;\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(str.split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(toLower(row.slice(0, i)));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\n/**\n * Service for sending network requests.\n */\n\nvar jsonType = { 'Content-Type': 'application/json' };\n\nfunction Http(url, options) {\n\n    var self = this || {},\n        client = Client(self.$vm),\n        request,\n        promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    options = isObject(url) ? url : extend({ url: url }, options);\n    request = merge({}, Http.options, self.$options, options);\n    promise = client(request).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: { 'Accept': 'application/json, text/plain, */*' },\n    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n};\n\nHttp.interceptors = [before, timeout, jsonp, method, mime, header, cors];\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, extend({ method: method, data: data, success: success }, options));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = extend({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = extend({}, action),\n        params = {},\n        data,\n        success,\n        error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (isFunction(args[1])) {\n\n                if (isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 52\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 53\n ** module chunks = 0\n **/"],"sourceRoot":""}